(ns sports-app.rocket-ship
  (:require ["package:flutter/material.dart" :as m]
            ["package:rive/rive.dart" :as rive]
            [cljd.flutter :as f]))
            ;["dart-widgets/rocket-ship.dart" :as rs]))

;; example of state machine implementation in dart
;; https://rive.app/docs/runtimes/state-machines#flutter

;; most likely we need onOnit to be created using deftype, example of deftype here
;; https://buttondown.com/tensegritics-curiosities/archive/game-tutorial-in-clojuredart/

;; finally cheat sheet is here:
;; https://github.com/Tensegritics/ClojureDart/blob/main/doc/ClojureDart%20Cheatsheet.pdf


;; TODO fill in the code that will make the magic happen
(defn rocket-ship
  [controller]
  (m/Container
    .width 300
    .height 300
    .child
    (rive/RiveAnimation.network "assets/animations/rocket_ship.riv"
                                .controllers [controller]
                                .fit (m/BoxFit.contain))))

(defn handle-rocket-ship
  [^rive/RiveAnimationController controller button-state]
  (fn []
    (if (.-isActive controller)
      (reset! button-state (m/Icon (m/Icons.flight_takeoff)))
      (reset! button-state (m/Icon (m/Icons.flight_land))))
    (.-isActive! controller (not (.-isActive controller)))
    nil))



